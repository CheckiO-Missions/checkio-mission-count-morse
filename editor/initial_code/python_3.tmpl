{% comment %}New initial code template{% endcomment %}
{% block env %}{% endblock env %}

{% block start %}
D = {
    'a': '.-', 'b': '-...', 'c': '-.-.', 'd': '-..', 'e': '.',
    'f': '..-.', 'g': '--.', 'h': '....', 'i': '..', 'j': '.---',
    'k': '-.-', 'l': '.-..', 'm': '--', 'n': '-.', 'o': '---',
    'p': '.--.', 'q': '--.-', 'r': '.-.', 's': '...', 't': '-',
    'u': '..-', 'v': '...-', 'w': '.--', 'x': '-..-', 'y': '-.--', 'z': '--..',
}


def count_morse(message: str, letters: str) -> int:
    # your code here
    return 0
{% endblock start %}

{% block example %}
print('Example:')
print(count_morse("-------.", "omg"))
{% endblock %}

# These "asserts" are used for self-checking
{% block tests %}
{% for t in tests %}
assert {% block call %}count_morse({{t.input|p_args}})
{% endblock %} == {% block result %}{{t.answer|p}}{% endblock %}{% endfor %}
{% endblock %}

{% block final %}
print("The mission is done! Click 'Check Solution' to earn rewards!")
{% endblock final %}
